<%- include('includes/sidenavsup.ejs') %>
  <!-- Para las rutas -->
  <h1 id="principal">Este sitio es el principal</h1><br>
<<<<<<< HEAD


  <!-- Verificar que sean los roles autorizados provenientes del index -->
  <% for (let esRol of rolesA) { %>
    <% if (esRol.idRol==rol) { %>
      <!-- array de roles + el id del usuario -->
      <!-- si el rol esta en los autorizados, se muestra misMentorados -->
      <p>Mis mentorados:</p>
      <a href="/mentorados"><button type="button" class="btn btn-outline-secondary">Mis Mentorados</button></a>
      <br><br>
      <% } %>
        <% } %>

          <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"
            integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB"
            crossorigin="anonymous"></script>
          <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
            integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13"
            crossorigin="anonymous"></script>

          <%- include('includes/foot.ejs') %>
=======
  <input id="idE" value="<% idEmpleado %>" type="hidden">
  <!-- Verificar que sean los roles autorizados provenientes del index -->
  <% if (roles_autorizados.includes(rol)) { %>
    <!-- array de roles + el id del usuario -->
    <!-- si el rol esta en los autorizados, se muestra misMentorados -->
    <p>Mis mentorados:</p>
    <a href="/users/misMentorados"><button type="button" class="btn btn-outline-secondary">Mis Mentorados</button></a>
    <br><br>
    <% } %>

      <div id="chart-container" style="position: relative; height:30vh; width:50vw">
        <!--//Para cambiar tamanio-->
        <canvas id="mycanvas"></canvas>
      </div>

      <script>

        const graficas = () => {

          console.log("a");

          const new_id = document.getElementById("idE");
          console.log(new_id);

          fetch('/users/tops/' + new_id, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              //'csrf-token': csrf
            }
          }).then(result => {
            return result.json();
          }).then(data => {

            console.log(data);

            //! Se definen las listas de los valores a desplegar 
            var nivel_craft = [];
            var nivel_business = [];
            var nivel_people = [];
            var fechas = [];
            var fechas2 = [];

            for (var i in data) {
              if (data[i].idDimension == 1) {
                nivel_craft.push(data[i].nivelE.toFixed(1));
              }
              else if (data[i].idDimension == 2) {
                nivel_people.push(data[i].nivelE.toFixed(1));
              }
              else if (data[i].idDimension == 3) {
                nivel_business.push(data[i].nivelE.toFixed(1));
              }

              if (!(fechas2.includes(data[i].fecha))) {

                fechas2.push(data[i].fecha);
                let d = data[i].fecha.split("T")[0];
                fechas.push(d);
              }
            }

            console.log(nivel_craft);
            console.log(nivel_business);
            console.log(nivel_people);
            console.log(fechas);

            var chartdata = {
              labels: fechas,
              datasets: [
                {
                  label: 'Craft',
                  backgroundColor: // Color de las barras en la grafica
                    'rgba(255, 99, 132, 0.2)',

                  borderColor: // Color del borde de las barras en la grafica  
                    'rgb(255, 99, 132)',

                  hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                  hoverBorderColor: 'rgba(200, 200, 200, 1)',
                  data: nivel_craft,
                },
                {
                  label: 'People & Mindsets',
                  backgroundColor: // Color de las barras en la grafica
                    'rgba(255, 159, 64, 0.2)',

                  borderColor: // Color del borde de las barras en la grafica  
                    'rgb(255, 159, 64)',

                  hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                  hoverBorderColor: 'rgba(200, 200, 200, 1)',
                  data: nivel_people,
                },
                {
                  label: 'Commercial & customer',
                  backgroundColor: // Color de las barras en la grafica
                    'rgba(255, 205, 86, 0.2)',

                  borderColor: // Color del borde de las barras en la grafica  
                    'rgb(255, 205, 86)',

                  hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                  hoverBorderColor: 'rgba(200, 200, 200, 1)',
                  data: nivel_business,
                }
              ]
            };

            var ctx = document.getElementById("mycanvas");

            var barGraph = new Chart(ctx, {
              type: 'line',
              data: chartdata,
              options: {
                responsive: true,
                interaction: {
                  mode: 'index',
                  intersect: false,
                },
                stacked: true,
                plugins: {
                  title: {
                    display: true,
                    text: 'Niveles de Empleado'
                  }
                },
                scales: {
                  y: {
                    type: 'linear',
                    display: true,
                    position: 'left',
                    /*ticks: {
                      min: 0,
                      max: 5
                    }*/
                  },
                }
              },
            })

            /*var dimension = [];
            var nivel = [];

            for (var i in data) {
              if (data[i].idDimension == 1) {
                nivel_craft.push(data[i].nivelE)
              }
              dimension.push(data[i].nombre);
              nivel.push(data[i].nivelE.toFixed(1));
            }

            console.log(dimension);
            console.log(nivel);

            var chartdata = {
              labels: dimension,
              datasets: [
                {
                  label: 'Nivel de dimensiÃ³n',
                  backgroundColor: // Color de las barras en la grafica
                    ['rgba(255, 99, 132, 0.2)',
                      'rgba(255, 159, 64, 0.2)',
                      'rgba(255, 205, 86, 0.2)'],

                  borderColor: // Color del borde de las barras en la grafica  
                    ['rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)'],

                  hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                  hoverBorderColor: 'rgba(200, 200, 200, 1)',
                  data: nivel
                }
              ]
            };

            var ctx = document.getElementById("mycanvas");

            var barGraph = new Chart(ctx, {
              type: 'line', // Se define el tipo de grafica
              data: chartdata
            });*/

            /*for (let d of data) {
            }*/

          }).catch(err => {
            console.log(err);

          });
        };

        window.onload = function () {
          graficas();
        };
      </script>

      <!-- javascript -->
      <!--script type="text/javascript" src="js/jquery.min.js"></script-->
      <script type="text/javascript" src="js/Chart.min.js"></script>
      <script type="text/javascript" src="js/app.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"
        integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB"
        crossorigin="anonymous"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
        integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13"
        crossorigin="anonymous"></script>
>>>>>>> Aris
